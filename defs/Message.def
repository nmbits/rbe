define_class "BMessage" do
  kit "app"
  header_file "app/Message.h"
  variable "uint32 what"
  function "BMessage" do
    options :ctor, :public
    interface [], nil
    interface ["uint32 what"], nil
    interface ["const BMessage& other"], nil
  end
  function "GetInfo" do
    options :public, :ignore
    interface ["type_code typeRequested", "int32 index", "char **nameFound", "type_code *typeFound", "int32 *countFound = NULL"], "status_t", :const
    interface ["const char *name", "type_code *typeFound", "int32 *countFound = NULL"], "status_t", :const
    interface ["const char *name", "type_code *typeFound", "bool *fixedSize"], "status_t", :const
    interface ["const char *name", "type_code *typeFound", "int32 *countFound", "bool *fixedSize"], "status_t", :const
  end
  function "CountNames" do
    options :public
    interface ["type_code type"], "int32", :const
  end
  function "IsEmpty" do
    options :public
    interface [], "bool", :const
  end
  function "IsSystem" do
    options :public
    interface [], "bool", :const
  end
  function "IsReply" do
    options :public
    interface [], "bool", :const
  end
  function "PrintToStream" do
    options :public
    interface [], nil, :const
  end
  function "Rename" do
    options :public
    interface ["const char *oldEntry", "const char *newEntry"], "status_t"
  end
  function "WasDelivered" do
    options :public
    interface [], "bool", :const
  end
  function "IsSourceWaiting" do
    options :public
    interface [], "bool", :const
  end
  function "IsSourceRemote" do
    options :public
    interface [], "bool", :const
  end
  function "ReturnAddress" do
    options :public
    interface [], "BMessenger", :const
  end
  function "Previous" do
    options :public
    interface [], "const BMessage *", :const
  end
  function "WasDropped" do
    options :public
    interface [], "bool", :const
  end
  function "DropPoint" do
    options :public
    interface ["BPoint *offset = NULL"], "BPoint", :const
  end
  function "SendReply" do
    options :public
    interface ["uint32 command", "%nillable BHandler *replyTo = NULL"], "status_t"
    interface ["BMessage *reply", "%nillable BHandler *replyTo = NULL", "bigtime_t timeout = B_INFINITE_TIMEOUT"], "status_t"
    interface ["BMessage *reply", "BMessenger replyTo", "bigtime_t timeout = B_INFINITE_TIMEOUT"], "status_t"
    interface ["uint32 command", "BMessage *replyToReply"], "status_t"
    interface ["BMessage *reply", "BMessage *replyToReply", "bigtime_t sendTimeout = B_INFINITE_TIMEOUT", "bigtime_t replyTimeout = B_INFINITE_TIMEOUT"], "status_t"
  end
  function "FlattenedSize" do
    options :public
    interface [], "ssize_t", :const
  end
  function "Flatten" do
    options :public, :ignore
    interface ["char *buffer", "ssize_t size"], "status_t", :const
    interface ["BDataIO *stream", "ssize_t *size = NULL"], "status_t", :const
  end
  function "Unflatten" do
    options :public, :ignore
    interface ["const char *flatBuffer"], "status_t"
    interface ["BDataIO *stream"], "status_t"
  end
  function "AddSpecifier" do
    options :public
    interface ["const char *property"], "status_t"
    interface ["const char *property", "int32 index"], "status_t"
    interface ["const char *property", "int32 index", "int32 range"], "status_t"
    interface ["const char *property", "const char *name"], "status_t"
    interface ["const BMessage *specifier"], "status_t"
  end
  function "SetCurrentSpecifier" do
    options :public
    interface ["int32 index"], "status_t"
  end
  function "GetCurrentSpecifier" do
    options :public, :ignore
    interface ["int32 *index", "BMessage *specifier = NULL", "int32 *what = NULL", "const char **property = NULL"], "status_t", :const
  end
  function "HasSpecifiers" do
    options :public
    interface [], "bool", :const
  end
  function "PopSpecifier" do
    options :public
    interface [], "status_t"
  end
  function "AddAlignment" do
    options :public, :ignore
    interface ["const char *name", "const BAlignment& alignment"], "status_t"
  end
  function "AddRect" do
    options :public
    interface ["const char *name", "BRect rect"], "status_t"
  end
  function "AddPoint" do
    options :public
    interface ["const char *name", "BPoint point"], "status_t"
  end
  function "AddSize" do
    options :public
    interface ["const char *name", "BSize size"], "status_t"
  end
  function "AddString" do
    options :public
    interface ["const char *name", "const char *string"], "status_t"
    interface ["const char *name", "const BString& string"], "status_t", :ignore
  end
  function "AddStrings" do
    options :public, :ignore
    interface ["const char *name", "const BStringList& list"], "status_t"
  end
  function "AddInt8" do
    options :public
    interface ["const char *name", "int8 value"], "status_t"
  end
  function "AddUInt8" do
    options :public
    interface ["const char *name", "uint8 value"], "status_t"
  end
  function "AddInt16" do
    options :public
    interface ["const char *name", "int16 value"], "status_t"
  end
  function "AddUInt16" do
    options :public
    interface ["const char *name", "uint16 value"], "status_t"
  end
  function "AddInt32" do
    options :public
    interface ["const char *name", "int32 value"], "status_t"
  end
  function "AddUInt32" do
    options :public
    interface ["const char *name", "uint32 value"], "status_t"
  end
  function "AddInt64" do
    options :public
    interface ["const char *name", "int64 value"], "status_t"
  end
  function "AddUInt64" do
    options :public
    interface ["const char *name", "uint64 value"], "status_t"
  end
  function "AddBool" do
    options :public
    interface ["const char *name", "bool value"], "status_t"
  end
  function "AddFloat" do
    options :public
    interface ["const char *name", "float value"], "status_t"
  end
  function "AddDouble" do
    options :public
    interface ["const char *name", "double value"], "status_t"
  end
  function "AddColor" do
    options :public, :ignore
    interface ["const char *name", "rgb_color value"], "status_t"
  end
  function "AddPointer" do
    options :public, :ignore
    interface ["const char *name", "const void *pointer"], "status_t"
  end
  function "AddMessenger" do
    options :public
    interface ["const char *name", "BMessenger messenger"], "status_t"
  end
  function "AddRef" do
    options :public, :ignore
    interface ["const char *name", "const entry_ref *ref"], "status_t"
  end
  function "AddMessage" do
    options :public
    interface ["const char *name", "const BMessage *message"], "status_t"
  end
  function "AddFlat" do
    options :public, :ignore
    interface ["const char *name", "BFlattenable *object", "int32 count = 1"], "status_t"
    interface ["const char *name", "const BFlattenable *object", "int32 count = 1"], "status_t"
  end
  function "AddData" do
    options :public, :ignore
    interface ["const char *name", "type_code type", "const void *data", "ssize_t numBytes", "bool isFixedSize = true", "int32 count = 1"], "status_t"
  end
  function "Append" do
    options :public
    interface ["const BMessage& message"], "status_t"
  end
  function "RemoveData" do
    options :public
    interface ["const char *name", "int32 index = 0"], "status_t"
  end
  function "RemoveName" do
    options :public
    interface ["const char *name"], "status_t"
  end
  function "MakeEmpty" do
    options :public
    interface [], "status_t"
  end
  function "FindAlignment" do
    options :public, :ignore
    interface ["const char *name", "BAlignment *alignment"], "status_t", :const
    interface ["const char *name", "int32 index", "BAlignment *alignment"], "status_t", :const
  end
  function "FindRect" do
    options :public
    interface ["const char *name", "BRect *rect"], "status_t", :const, :ignore
    interface ["const char *name", "int32 index", "BRect *rect"], "status_t", :const, :ignore
    interface ["const char *name", "int32 n = 0"], "BRect", :const
  end
  function "FindPoint" do
    options :public
    interface ["const char *name", "BPoint *point"], "status_t", :const, :ignore
    interface ["const char *name", "int32 index", "BPoint *point"], "status_t", :const, :ignore
    interface ["const char *name", "int32 n = 0"], "BPoint", :const
  end
  function "FindSize" do
    options :public, :ignore
    interface ["const char *name", "BSize *size"], "status_t"
    interface ["const char *name", "int32 index", "BSize *size"], "status_t", :const
  end
  function "FindString" do
    options :public
    interface ["const char *name", "const char **string"], "status_t", :const, :ignore
    interface ["const char *name", "int32 index", "const char **string"], "status_t", :const, :ignore
    interface ["const char *name", "BString *string"], "status_t", :const, :ignore
    interface ["const char *name", "int32 index", "BString *string"], "status_t", :const, :ignore
    interface ["const char *name", "int32 n = 0"], "const char *", :const
  end
  function "FindStrings" do
    options :public, :ignore
    interface ["const char *name", "BStringList *list"], "status_t", :const
  end
  function "FindInt8" do
    options :public
    interface ["const char *name", "int8 *value"], "status_t", :const, :ignore
    interface ["const char *name", "int32 index", "int8 *value"], "status_t", :const, :ignore
    interface ["const char *name", "int32 n = 0"], "int8", :const
  end
  function "FindUInt8" do
    options :public, :ignore
    interface ["const char *name", "uint8 *value"], "status_t", :const
    interface ["const char *name", "int32 index", "uint8 *value"], "status_t", :const
  end
  function "FindInt16" do
    options :public
    interface ["const char *name", "int16 *value"], "status_t", :const, :ignore
    interface ["const char *name", "int32 index", "int16 *value"], "status_t", :const, :ignore
    interface ["const char *name", "int32 n = 0"], "int16", :const
  end
  function "FindUInt16" do
    options :public, :ignore
    interface ["const char *name", "uint16 *value"], "status_t", :const
    interface ["const char *name", "int32 index", "uint16 *value"], "status_t", :const
  end
  function "FindInt32" do
    options :public
    interface ["const char *name", "int32 *value"], "status_t", :const, :ignore
    interface ["const char *name", "int32 index", "int32 *value"], "status_t", :const, :ignore
    interface ["const char *name", "int32 n = 0"], "int32", :const
  end
  function "FindUInt32" do
    options :public, :ignore
    interface ["const char *name", "uint32 *value"], "status_t", :const
    interface ["const char *name", "int32 index", "uint32 *value"], "status_t", :const
  end
  function "FindInt64" do
    options :public
    interface ["const char *name", "int64 *value"], "status_t", :const, :ignore
    interface ["const char *name", "int32 index", "int64 *value"], "status_t", :const, :ignore
    interface ["const char *name", "int32 n = 0"], "int64", :const
  end
  function "FindUInt64" do
    options :public, :ignore
    interface ["const char *name", "uint64 *value"], "status_t", :const
    interface ["const char *name", "int32 index", "uint64 *value"], "status_t", :const
  end
  function "FindBool" do
    options :public
    interface ["const char *name", "bool *value"], "status_t", :const, :ignore
    interface ["const char *name", "int32 index", "bool *value"], "status_t", :const, :ignore
    interface ["const char *name", "int32 n = 0"], "bool", :const
  end
  function "FindFloat" do
    options :public
    interface ["const char *name", "float *value"], "status_t", :const, :ignore
    interface ["const char *name", "int32 index", "float *value"], "status_t", :const, :ignore
    interface ["const char *name", "int32 n = 0"], "float", :const
  end
  function "FindDouble" do
    options :public
    interface ["const char *name", "double *value"], "status_t", :const, :ignore
    interface ["const char *name", "int32 index", "double *value"], "status_t", :const, :ignore
    interface ["const char *name", "int32 n = 0"], "double", :const
  end
  function "FindColor" do
    options :public, :ignore
    interface ["const char *name", "rgb_color *value"], "status_t", :const
    interface ["const char *name", "int32 index", "rgb_color *value"], "status_t", :const
  end
  function "FindPointer" do
    options :public, :ignore
    interface ["const char *name", "void **pointer"], "status_t", :const
    interface ["const char *name", "int32 index", "void **pointer"], "status_t", :const
  end
  function "FindMessenger" do
    options :public, :ignore
    interface ["const char *name", "BMessenger *messenger"], "status_t", :const
    interface ["const char *name", "int32 index", "BMessenger *messenger"], "status_t", :const
  end
  function "FindRef" do
    options :public, :ignore
    interface ["const char *name", "entry_ref *ref"], "status_t", :const
    interface ["const char *name", "int32 index", "entry_ref *ref"], "status_t", :const
  end
  function "FindMessage" do
    options :public, :ignore
    interface ["const char *name", "BMessage *message"], "status_t", :const
    interface ["const char *name", "int32 index", "BMessage *message"], "status_t", :const
  end
  function "FindFlat" do
    options :public, :ignore
    interface ["const char *name", "BFlattenable *object"], "status_t", :const
    interface ["const char *name", "int32 index", "BFlattenable *object"], "status_t", :const
  end
  function "FindData" do
    options :public, :ignore
    interface ["const char *name", "type_code type", "const void **data", "ssize_t *numBytes"], "status_t", :const
    interface ["const char *name", "type_code type", "int32 index", "const void **data", "ssize_t *numBytes"], "status_t", :const
  end
  function "ReplaceAlignment" do
    options :public, :ignore
    interface ["const char *name", "const BAlignment& alignment"], "status_t"
    interface ["const char *name", "int32 index", "const BAlignment& alignment"], "status_t"
  end
  function "ReplaceRect" do
    options :public
    interface ["const char *name", "BRect rect"], "status_t"
    interface ["const char *name", "int32 index", "BRect rect"], "status_t"
  end
  function "ReplacePoint" do
    options :public
    interface ["const char *name", "BPoint aPoint"], "status_t"
    interface ["const char *name", "int32 index", "BPoint aPoint"], "status_t"
  end
  function "ReplaceSize" do
    options :public
    interface ["const char *name", "BSize aSize"], "status_t"
    interface ["const char *name", "int32 index", "BSize aSize"], "status_t"
  end
  function "ReplaceString" do
    options :public
    interface ["const char *name", "const char *string"], "status_t"
    interface ["const char *name", "int32 index", "const char *string"], "status_t"
    interface ["const char *name", "const BString& string"], "status_t", :ignore
    interface ["const char *name", "int32 index", "const BString& string"], "status_t", :ignore
  end
  function "ReplaceInt8" do
    options :public
    interface ["const char *name", "int8 value"], "status_t"
    interface ["const char *name", "int32 index", "int8 value"], "status_t"
  end
  function "ReplaceUInt8" do
    options :public
    interface ["const char *name", "uint8 value"], "status_t"
    interface ["const char *name", "int32 index", "uint8 value"], "status_t"
  end
  function "ReplaceInt16" do
    options :public
    interface ["const char *name", "int16 value"], "status_t"
    interface ["const char *name", "int32 index", "int16 value"], "status_t"
  end
  function "ReplaceUInt16" do
    options :public
    interface ["const char *name", "uint16 value"], "status_t"
    interface ["const char *name", "int32 index", "uint16 value"], "status_t"
  end
  function "ReplaceInt32" do
    options :public
    interface ["const char *name", "int32 value"], "status_t"
    interface ["const char *name", "int32 index", "int32 value"], "status_t"
  end
  function "ReplaceUInt32" do
    options :public
    interface ["const char *name", "uint32 value"], "status_t"
    interface ["const char *name", "int32 index", "uint32 value"], "status_t"
  end
  function "ReplaceInt64" do
    options :public
    interface ["const char *name", "int64 value"], "status_t"
    interface ["const char *name", "int32 index", "int64 value"], "status_t"
  end
  function "ReplaceUInt64" do
    options :public
    interface ["const char *name", "uint64 value"], "status_t"
    interface ["const char *name", "int32 index", "uint64 value"], "status_t"
  end
  function "ReplaceBool" do
    options :public
    interface ["const char *name", "bool aBoolean"], "status_t"
    interface ["const char *name", "int32 index", "bool value"], "status_t"
  end
  function "ReplaceFloat" do
    options :public
    interface ["const char *name", "float value"], "status_t"
    interface ["const char *name", "int32 index", "float value"], "status_t"
  end
  function "ReplaceDouble" do
    options :public
    interface ["const char *name", "double value"], "status_t"
    interface ["const char *name", "int32 index", "double value"], "status_t"
  end
  function "ReplaceColor" do
    options :public, :ignore
    interface ["const char *name", "rgb_color value"], "status_t"
    interface ["const char *name", "int32 index", "rgb_color value"], "status_t"
  end
  function "ReplacePointer" do
    options :public, :ignore
    interface ["const char *name", "const void *pointer"], "status_t"
    interface ["const char *name", "int32 index", "const void *pointer"], "status_t"
  end
  function "ReplaceMessenger" do
    options :public
    interface ["const char *name", "BMessenger messenger"], "status_t"
    interface ["const char *name", "int32 index", "BMessenger messenger"], "status_t"
  end
  function "ReplaceRef" do
    options :public, :ignore
    interface ["const char *name", "const entry_ref *ref"], "status_t"
    interface ["const char *name", "int32 index", "const entry_ref *ref"], "status_t"
  end
  function "ReplaceMessage" do
    options :public
    interface ["const char *name", "const BMessage *message"], "status_t"
    interface ["const char *name", "int32 index", "const BMessage *message"], "status_t"
  end
  function "ReplaceFlat" do
    options :public, :ignore
    interface ["const char *name", "BFlattenable *object"], "status_t"
    interface ["const char *name", "int32 index", "BFlattenable *object"], "status_t"
  end
  function "ReplaceData" do
    options :public, :ignore
    interface ["const char *name", "type_code type", "const void *data", "ssize_t numBytes"], "status_t"
    interface ["const char *name", "type_code type", "int32 index", "const void *data", "ssize_t numBytes"], "status_t"
  end
  function "HasSameData" do
    options :public, :ignore
    interface ["const BMessage& other", "bool ignoreFieldOrder = true", "bool deep = false"], "bool", :const
  end
  function "HasAlignment" do
    options :public, :ignore
    interface ["const char *name", "int32 n = 0"], "bool", :const
  end
  function "HasRect" do
    options :public
    interface ["const char *name", "int32 n = 0"], "bool", :const
  end
  function "HasPoint" do
    options :public
    interface ["const char *name", "int32 n = 0"], "bool", :const
  end
  function "HasSize" do
    options :public
    interface ["const char *name", "int32 n = 0"], "bool", :const
  end
  function "HasString" do
    options :public
    interface ["const char *name", "int32 n = 0"], "bool", :const
  end
  function "HasInt8" do
    options :public
    interface ["const char *name", "int32 n = 0"], "bool", :const
  end
  function "HasUInt8" do
    options :public
    interface ["const char *name", "int32 n = 0"], "bool", :const
  end
  function "HasInt16" do
    options :public
    interface ["const char *name", "int32 n = 0"], "bool", :const
  end
  function "HasUInt16" do
    options :public
    interface ["const char *name", "int32 n = 0"], "bool", :const
  end
  function "HasInt32" do
    options :public
    interface ["const char *name", "int32 n = 0"], "bool", :const
  end
  function "HasUInt32" do
    options :public
    interface ["const char *name", "int32 n = 0"], "bool", :const
  end
  function "HasInt64" do
    options :public
    interface ["const char *name", "int32 n = 0"], "bool", :const
  end
  function "HasUInt64" do
    options :public
    interface ["const char *name", "int32 n = 0"], "bool", :const
  end
  function "HasBool" do
    options :public
    interface ["const char *name", "int32 n = 0"], "bool", :const
  end
  function "HasFloat" do
    options :public
    interface ["const char *name", "int32 n = 0"], "bool", :const
  end
  function "HasDouble" do
    options :public
    interface ["const char *name", "int32 n = 0"], "bool", :const
  end
  function "HasColor" do
    options :public
    interface ["const char *name", "int32 n = 0"], "bool", :const
  end
  function "HasPointer" do
    options :public
    interface ["const char *name", "int32 n = 0"], "bool", :const
  end
  function "HasMessenger" do
    options :public
    interface ["const char *name", "int32 n = 0"], "bool", :const
  end
  function "HasRef" do
    options :public
    interface ["const char *name", "int32 n = 0"], "bool", :const
  end
  function "HasMessage" do
    options :public
    interface ["const char *name", "int32 n = 0"], "bool", :const
  end
  function "HasFlat" do
    options :public, :ignore
    interface ["const char *name", "const BFlattenable *object"], "bool", :const
    interface ["const char *name", "int32 n", "const BFlattenable *object"], "bool", :const
  end
  function "HasData" do
    options :public, :ignore
    interface ["const char *name", "type_code code", "int32 n = 0"], "bool", :const
  end
  function "GetBool" do
    options :public
    interface ["const char *name", "bool defaultValue = false"], "bool", :const
    interface ["const char *name", "int32 index", "bool defaultValue"], "bool", :const
  end
  function "GetInt8" do
    options :public
    interface ["const char *name", "int8 defaultValue"], "int8", :const
    interface ["const char *name", "int32 index", "int8 defaultValue"], "int8", :const
  end
  function "GetUInt8" do
    options :public
    interface ["const char *name", "uint8 defaultValue"], "uint8", :const
    interface ["const char *name", "int32 index", "uint8 defaultValue"], "uint8", :const
  end
  function "GetInt16" do
    options :public
    interface ["const char *name", "int16 defaultValue"], "int16", :const
    interface ["const char *name", "int32 index", "int16 defaultValue"], "int16", :const
  end
  function "GetUInt16" do
    options :public
    interface ["const char *name", "uint16 defaultValue"], "uint16", :const
    interface ["const char *name", "int32 index", "uint16 defaultValue"], "uint16", :const
  end
  function "GetInt32" do
    options :public
    interface ["const char *name", "int32 defaultValue"], "int32", :const
    interface ["const char *name", "int32 index", "int32 defaultValue"], "int32", :const
  end
  function "GetUInt32" do
    options :public
    interface ["const char *name", "uint32 defaultValue"], "uint32", :const
    interface ["const char *name", "int32 index", "uint32 defaultValue"], "uint32", :const
  end
  function "GetInt64" do
    options :public
    interface ["const char *name", "int64 defaultValue"], "int64", :const
    interface ["const char *name", "int32 index", "int64 defaultValue"], "int64", :const
  end
  function "GetUInt64" do
    options :public
    interface ["const char *name", "uint64 defaultValue"], "uint64", :const
    interface ["const char *name", "int32 index", "uint64 defaultValue"], "uint64", :const
  end
  function "GetFloat" do
    options :public
    interface ["const char *name", "float defaultValue"], "float", :const
    interface ["const char *name", "int32 index", "float defaultValue"], "float", :const
  end
  function "GetDouble" do
    options :public
    interface ["const char *name", "double defaultValue"], "double", :const
    interface ["const char *name", "int32 index", "double defaultValue"], "double", :const
  end
  function "GetColor" do
    options :public, :ignore
    interface ["const char *name", "rgb_color defaultValue"], "rgb_color", :const
    interface ["const char *name", "int32 index", "rgb_color defaultValue"], "rgb_color", :const
  end
  function "GetString" do
    options :public
    interface ["const char *name", "const char *defaultValue = NULL"], "const char *", :const
    interface ["const char *name", "int32 index", "const char *defaultValue"], "const char *", :const
  end
  function "GetAlignment" do
    options :public, :ignore
    interface ["const char *name", "int32 index", "const BAlignment& defaultValue"], "BAlignment", :const
    interface ["const char *name", "const BAlignment& defaultValue"], "BAlignment", :const
  end
  function "GetRect" do
    options :public
    interface ["const char *name", "int32 index", "const BRect& defaultValue"], "BRect", :const
    interface ["const char *name", "const BRect& defaultValue"], "BRect", :const
  end
  function "GetPoint" do
    options :public
    interface ["const char *name", "int32 index", "const BPoint& defaultValue"], "BPoint", :const
    interface ["const char *name", "const BPoint& defaultValue"], "BPoint", :const
  end
  function "GetSize" do
    options :public
    interface ["const char *name", "int32 index", "const BSize& defaultValue"], "BSize", :const
    interface ["const char *name", "const BSize& defaultValue"], "BSize", :const
  end
  function "SetBool" do
    options :public
    interface ["const char *name", "bool value"], "status_t"
  end
  function "SetInt8" do
    options :public
    interface ["const char *name", "int8 value"], "status_t"
  end
  function "SetUInt8" do
    options :public
    interface ["const char *name", "uint8 value"], "status_t"
  end
  function "SetInt16" do
    options :public
    interface ["const char *name", "int16 value"], "status_t"
  end
  function "SetUInt16" do
    options :public
    interface ["const char *name", "uint16 value"], "status_t"
  end
  function "SetInt32" do
    options :public
    interface ["const char *name", "int32 value"], "status_t"
  end
  function "SetUInt32" do
    options :public
    interface ["const char *name", "uint32 value"], "status_t"
  end
  function "SetInt64" do
    options :public
    interface ["const char *name", "int64 value"], "status_t"
  end
  function "SetUInt64" do
    options :public
    interface ["const char *name", "uint64 value"], "status_t"
  end
  function "SetColor" do
    options :public, :ignore
    interface ["const char *name", "rgb_color value"], "status_t"
  end
  function "SetPointer" do
    options :public, :ignore
    interface ["const char *name", "const void *value"], "status_t"
  end
  function "SetString" do
    options :public
    interface ["const char *name", "const char *string"], "status_t"
    interface ["const char *name", "const BString& string"], "status_t", :ignore
  end
  function "SetFloat" do
    options :public
    interface ["const char *name", "float value"], "status_t"
  end
  function "SetDouble" do
    options :public
    interface ["const char *name", "double value"], "status_t"
  end
  function "SetAlignment" do
    options :public, :ignore
    interface ["const char *name", "const BAlignment& value"], "status_t"
  end
  function "SetPoint" do
    options :public
    interface ["const char *name", "const BPoint& value"], "status_t"
  end
  function "SetRect" do
    options :public
    interface ["const char *name", "const BRect& value"], "status_t"
  end
  function "SetSize" do
    options :public
    interface ["const char *name", "const BSize& value"], "status_t"
  end
  function "SetData" do
    options :public, :ignore
    interface ["const char *name", "type_code type", "const void *data", "ssize_t numBytes", "bool fixedSize = true", "int count = 1"], "status_t"
  end
end
